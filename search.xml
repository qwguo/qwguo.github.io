<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>css3中的filter滤镜使用</title>
      <link href="/2020/02/23/CSS3/filter/"/>
      <url>/2020/02/23/CSS3/filter/</url>
      
        <content type="html"><![CDATA[<h1 id="css3中的filter滤镜使用"><a href="#css3中的filter滤镜使用" class="headerlink" title="css3中的filter滤镜使用"></a>css3中的filter滤镜使用</h1><blockquote><p><code>filter</code> 滤镜，借鉴了Photoshop的滤镜效果，在ps中主要用来设置图层图片的模糊，颜色的高亮，对比度等效果，在css中滤镜通常用于调整图像，背景和边框的渲染和效果。</p></blockquote><table><thead><tr><th>函数名</th><th>取值</th><th>作用</th></tr></thead><tbody><tr><td>grayscale</td><td>值为0-1之间的小数, 或0%-100%百分数</td><td>灰度</td></tr><tr><td>sepia</td><td>值为0-1之间的小数, 或0%-100%百分数</td><td>褐色</td></tr><tr><td>saturate</td><td>值为num</td><td>饱和度</td></tr><tr><td>hue-rotate</td><td>值为angle</td><td>色相旋转</td></tr><tr><td>invert</td><td>反色</td><td>值为0-1之间的小数</td></tr><tr><td>opacity</td><td>值为0-1之间的小数</td><td>透明度</td></tr><tr><td>brightness</td><td>值为0-1之间的小数</td><td>亮度</td></tr><tr><td>contrast</td><td>值为num</td><td>对比度</td></tr><tr><td>blur</td><td>值为length</td><td>模糊</td></tr><tr><td>drop-shadow</td><td>和投影取值相同</td><td>阴影</td></tr></tbody></table><a id="more"></a><p><strong>兼容性：</strong></p><p><img src="/2020/02/23/CSS3/filter/filter.png" alt="image"><br><a href="https://caniuse.com/#search=filter" rel="external nofollow noopener noreferrer" target="_blank">查看兼容性详情</a></p><h2 id="1、grayscale-灰度模式"><a href="#1、grayscale-灰度模式" class="headerlink" title="1、grayscale 灰度模式"></a>1、grayscale 灰度模式</h2><blockquote><p>用来设置图像或者元素的灰度模式，也就是去掉所有颜色以灰色显示元素</p></blockquote><p><strong>基本语法：</strong> <code>filter:grayscale(val)</code></p><p><code>val</code> ：值为100%则完全转为灰度图像，值为0%图像无变化。值在0%到100%之间，则是效果的线性乘子。若未设置，值默认是0，同时也可以去0-1之间小数；</p><pre><code class="css">/* 100%灰度 */filter:grayscale(1);/* 50%灰度 */filter:grayscale(0.5);/* 0%灰度 */filter:grayscale(0);</code></pre><p><strong>案例:</strong> <a href="https://codepen.io/qwguo88/pen/MWYQyqK" rel="external nofollow noopener noreferrer" target="_blank">Demo</a><br><strong>颜色灰度：</strong></p><iframe height="500" style="width: 100%;" scrolling="no" title="filter-color-grayscale" src="https://codepen.io/qwguo88/embed/MWYQyqK?height=500&theme-id=30742&default-tab=result" frameborder="no" allowtransparency="true" allowfullscreen="true"><br>  See the Pen <a href="https://codepen.io/qwguo88/pen/MWYQyqK" rel="external nofollow noopener noreferrer" target="_blank">filter-color-grayscale</a> by qwguo<br>  (<a href="https://codepen.io/qwguo88" rel="external nofollow noopener noreferrer" target="_blank">@qwguo88</a>) on <a href="https://codepen.io" rel="external nofollow noopener noreferrer" target="_blank">CodePen</a>.<br></iframe><br><strong>图片灰度：</strong><br><iframe height="500" style="width: 100%;" scrolling="no" title="filter-img-grayscale" src="https://codepen.io/qwguo88/embed/yLNVdBp?height=500&theme-id=30742&default-tab=result" frameborder="no" allowtransparency="true" allowfullscreen="true"><br>  See the Pen <a href="https://codepen.io/qwguo88/pen/yLNVdBp" rel="external nofollow noopener noreferrer" target="_blank">filter-img-grayscale</a> by qwguo<br>  (<a href="https://codepen.io/qwguo88" rel="external nofollow noopener noreferrer" target="_blank">@qwguo88</a>) on <a href="https://codepen.io" rel="external nofollow noopener noreferrer" target="_blank">CodePen</a>.<br></iframe><h2 id="2、sepia-褐色"><a href="#2、sepia-褐色" class="headerlink" title="2、sepia 褐色"></a>2、sepia 褐色</h2><blockquote><p>将图片或者元素以褐色的形式显示，也就是复古效果。</p></blockquote><p><strong>基本语法：</strong> <code>filter:sepia(val)</code></p><p><code>val</code> ：值定义转换的比例。值为100%则完全是深褐色的，值为0%图像无变化。值在0%到100%之间，则是效果的线性乘子。若未设置，值默认是0，同时也可以去0-1之间小数；</p><pre><code class="css">/* 0%深褐色 */filter:sepia(0);/* 10%深褐色 */filter:sepia(10%);/* 100%深褐色 */filter:sepia(100%);</code></pre><p><strong>案例：</strong> <a href="https://codepen.io/qwguo88/pen/Jjdbzyg" rel="external nofollow noopener noreferrer" target="_blank">Demo</a></p><iframe height="500" style="width: 100%;" scrolling="no" title="filter-sepia" src="https://codepen.io/qwguo88/embed/Jjdbzyg?height=300&theme-id=30742&default-tab=result" frameborder="no" allowtransparency="true" allowfullscreen="true"><br>  See the Pen <a href="https://codepen.io/qwguo88/pen/Jjdbzyg" rel="external nofollow noopener noreferrer" target="_blank">filter-sepia</a> by qwguo<br>  (<a href="https://codepen.io/qwguo88" rel="external nofollow noopener noreferrer" target="_blank">@qwguo88</a>) on <a href="https://codepen.io" rel="external nofollow noopener noreferrer" target="_blank">CodePen</a>.<br></iframe><h2 id="3、saturate-饱和度"><a href="#3、saturate-饱和度" class="headerlink" title="3、saturate 饱和度"></a>3、saturate 饱和度</h2><blockquote><p>用于设置图像的饱和度。</p></blockquote><p><strong>基本语法：</strong> <code>filter: saturate(val)</code></p><p><code>val</code> ：取值为0%则是完全不饱和，值为100%则图像无变化。其他值，则是效果的线性乘子。超过100%的值是允许的，则有更高的饱和度。 若值未设置，值默认是1，同时也可以去0-1之间小数。</p><pre><code class="css">/* 0%深褐色 */filter:saturate(0);/* 10%深褐色 */filter:saturate(10%);/* 100%深褐色 */filter:saturate(100%);</code></pre><p><strong>案例：</strong> <a href="https://codepen.io/qwguo88/pen/qBdqvPW" rel="external nofollow noopener noreferrer" target="_blank">Demo</a></p><iframe height="500" style="width: 100%;" scrolling="no" title="filter-saturate" src="https://codepen.io/qwguo88/embed/qBdqvPW?height=300&theme-id=30742&default-tab=result" frameborder="no" allowtransparency="true" allowfullscreen="true"><br>  See the Pen <a href="https://codepen.io/qwguo88/pen/qBdqvPW" rel="external nofollow noopener noreferrer" target="_blank">filter-saturate</a> by qwguo<br>  (<a href="https://codepen.io/qwguo88" rel="external nofollow noopener noreferrer" target="_blank">@qwguo88</a>) on <a href="https://codepen.io" rel="external nofollow noopener noreferrer" target="_blank">CodePen</a>.<br></iframe><h2 id="4、hue-rotate-色相旋转"><a href="#4、hue-rotate-色相旋转" class="headerlink" title="4、hue-rotate 色相旋转"></a>4、hue-rotate 色相旋转</h2><blockquote><p>给图像应用色相旋转。</p></blockquote><p><strong>基本语法：</strong> <code>filter: hue-rotate(angle)</code></p><p><code>angle</code> ：用于设定图像被调整的色环角度值。值为0deg，则图像无变化。若值未设置，默认值是0deg。该值虽然没有最大值，超过360deg的值相当于又绕一圈。</p><pre><code class="css">/* 无变化 */filter: hue-rotate(0deg);/* 色相旋转30度 */filter: hue-rotate(30deg);/* 色相旋转360度 */filter: hue-rotate(360deg);</code></pre><p><strong>案例：</strong> <a href="https://codepen.io/qwguo88/pen/XWbNLmx" rel="external nofollow noopener noreferrer" target="_blank">Demo</a></p><iframe height="500" style="width: 100%;" scrolling="no" title="filter-hue-rotate" src="https://codepen.io/qwguo88/embed/XWbNLmx?height=500&theme-id=30742&default-tab=result" frameborder="no" allowtransparency="true" allowfullscreen="true"><br>  See the Pen <a href="https://codepen.io/qwguo88/pen/XWbNLmx" rel="external nofollow noopener noreferrer" target="_blank">filter-hue-rotate</a> by qwguo<br>  (<a href="https://codepen.io/qwguo88" rel="external nofollow noopener noreferrer" target="_blank">@qwguo88</a>) on <a href="https://codepen.io" rel="external nofollow noopener noreferrer" target="_blank">CodePen</a>.<br></iframe><h2 id="5、invert-反色"><a href="#5、invert-反色" class="headerlink" title="5、invert 反色"></a>5、invert 反色</h2><blockquote><p>给图片进行反转取色显示</p></blockquote><p><strong>基本语法：</strong> <code>filter: invert(val)</code></p><p><code>val</code> ：取值为100%表示完全反转。值为0%则图像无变化。值在0%和100%之间。 若值未设置，值默认是0。，同时也可以去0-1之间小数。</p><pre><code class="css">/* 无变化 */filter: invert(0);/* 取反30% */filter: invert(30%);/* or */filter: invert(.3);</code></pre><p><strong>案例：</strong> <a href="https://codepen.io/qwguo88/pen/PoqbMWe" rel="external nofollow noopener noreferrer" target="_blank">Demo</a></p><iframe height="500" style="width: 100%;" scrolling="no" title="filter-invert" src="https://codepen.io/qwguo88/embed/PoqbMWe?height=500&theme-id=30742&default-tab=result" frameborder="no" allowtransparency="true" allowfullscreen="true"><br>  See the Pen <a href="https://codepen.io/qwguo88/pen/PoqbMWe" rel="external nofollow noopener noreferrer" target="_blank">filter-invert</a> by qwguo<br>  (<a href="https://codepen.io/qwguo88" rel="external nofollow noopener noreferrer" target="_blank">@qwguo88</a>) on <a href="https://codepen.io" rel="external nofollow noopener noreferrer" target="_blank">CodePen</a>.<br></iframe><h2 id="6、opacity-透明度"><a href="#6、opacity-透明度" class="headerlink" title="6、opacity 透明度"></a>6、opacity 透明度</h2><blockquote><p>给图像或者元素设置透明度，该函数与已有的opacity属性很相似，不同之处在于通过filter，一些浏览器为了提升性能会提供硬件加速。</p></blockquote><p><strong>基本语法：</strong> <code>filter: opacity(val)</code></p><p><code>val</code> ： 取值为0%则是完全透明，值为100%则图像无变化。值在0%和100%之间。 若值未设置，值默认是1。</p><pre><code class="css">/* 无变化 */filter: opacity(0);/* 透明度30% */filter: opacity(30%);/* or */filter: opacity(.3);</code></pre><p><strong>案例：</strong> <a href="https://codepen.io/qwguo88/pen/MWwbNPa" rel="external nofollow noopener noreferrer" target="_blank">Demo</a></p><iframe height="500" style="width: 100%;" scrolling="no" title="filter-opacity" src="https://codepen.io/qwguo88/embed/MWwbNPa?height=500&theme-id=30742&default-tab=result" frameborder="no" allowtransparency="true" allowfullscreen="true"><br>  See the Pen <a href="https://codepen.io/qwguo88/pen/MWwbNPa" rel="external nofollow noopener noreferrer" target="_blank">filter-opacity</a> by qwguo<br>  (<a href="https://codepen.io/qwguo88" rel="external nofollow noopener noreferrer" target="_blank">@qwguo88</a>) on <a href="https://codepen.io" rel="external nofollow noopener noreferrer" target="_blank">CodePen</a>.<br></iframe><h2 id="7、brightness-亮度"><a href="#7、brightness-亮度" class="headerlink" title="7、brightness 亮度"></a>7、brightness 亮度</h2><blockquote><p>用于设置图像的亮度，给图片应用一种线性乘法，使其看起来更亮或更暗。</p></blockquote><p><strong>基本语法：</strong> <code>filter: brightness(val)</code></p><p><code>val</code> ： 取值如果是0%，图像会全黑。取值是100%，则图像无变化。其他的值对应线性乘数效果。值超过100%也是可以的，图像会比原来更亮。如果没有设定值，默认是1。</p><pre><code class="css">/* 无变化 */filter: brightness(0);/* 图像变暗70% */filter: brightness(30%);/* or */filter: brightness(.3);</code></pre><p><strong>案例：</strong> <a href="https://codepen.io/qwguo88/pen/xxGRveL" rel="external nofollow noopener noreferrer" target="_blank">Demo</a></p><iframe height="500" style="width: 100%;" scrolling="no" title="filter-brightness" src="https://codepen.io/qwguo88/embed/xxGRveL?height=500&theme-id=30742&default-tab=result" frameborder="no" allowtransparency="true" allowfullscreen="true"><br>  See the Pen <a href="https://codepen.io/qwguo88/pen/xxGRveL" rel="external nofollow noopener noreferrer" target="_blank">filter-brightness</a> by qwguo<br>  (<a href="https://codepen.io/qwguo88" rel="external nofollow noopener noreferrer" target="_blank">@qwguo88</a>) on <a href="https://codepen.io" rel="external nofollow noopener noreferrer" target="_blank">CodePen</a>.<br></iframe><h2 id="8、contrast-对比度"><a href="#8、contrast-对比度" class="headerlink" title="8、contrast 对比度"></a>8、contrast 对比度</h2><blockquote><p>用于设置图像的对比度，</p></blockquote><p><strong>基本语法：</strong> <code>filter: contrast(val)</code></p><p><code>val</code> ： 值是0%的话，图像会全灰。值是100%，图像不变。值可以超过100%，意味着会运用更低的对比。若没有设置值，默认是1。</p><pre><code class="css">/* 无变化 */filter: contrast(0);/* 图像对比度变暗70% */filter: contrast(30%);/* or */filter: contrast(.3);</code></pre><p><strong>案例：</strong> <a href="https://codepen.io/qwguo88/pen/OJVbKKG" rel="external nofollow noopener noreferrer" target="_blank">Demo</a></p><iframe height="500" style="width: 100%;" scrolling="no" title="filter-contrast" src="https://codepen.io/qwguo88/embed/OJVbKKG?height=500&theme-id=30742&default-tab=result" frameborder="no" allowtransparency="true" allowfullscreen="true"><br>  See the Pen <a href="https://codepen.io/qwguo88/pen/OJVbKKG" rel="external nofollow noopener noreferrer" target="_blank">filter-contrast</a> by qwguo<br>  (<a href="https://codepen.io/qwguo88" rel="external nofollow noopener noreferrer" target="_blank">@qwguo88</a>) on <a href="https://codepen.io" rel="external nofollow noopener noreferrer" target="_blank">CodePen</a>.<br></iframe><h2 id="9、blur-模糊度"><a href="#9、blur-模糊度" class="headerlink" title="9、blur 模糊度"></a>9、blur 模糊度</h2><blockquote><p>用于设置图像的高斯模糊度</p></blockquote><p><strong>基本语法：</strong> <code>filter: blur(radius)</code></p><p><code>radius</code> ：设定高斯函数的标准差，或者是屏幕上以多少像素融在一起，所以值越大越模糊；如果没有设定值，则默认是0；这个参数可设置css长度值（em、px、rem、pt）等，但不接受百分比值。</p><pre><code class="css">/* 无变化 */filter: blur(0);/* 设置图像高斯模糊2个像素融合 */filter: blur(2px);/* 设置图像高斯模糊5个像素融合 */filter: blur(5px);</code></pre><p><strong>案例：</strong> <a href="https://codepen.io/qwguo88/pen/OJVbKKG" rel="external nofollow noopener noreferrer" target="_blank">Demo</a></p><iframe height="500" style="width: 100%;" scrolling="no" title="filter-contrast" src="https://codepen.io/qwguo88/embed/OJVbKKG?height=500&theme-id=30742&default-tab=result" frameborder="no" allowtransparency="true" allowfullscreen="true"><br>  See the Pen <a href="https://codepen.io/qwguo88/pen/OJVbKKG" rel="external nofollow noopener noreferrer" target="_blank">filter-contrast</a> by qwguo<br>  (<a href="https://codepen.io/qwguo88" rel="external nofollow noopener noreferrer" target="_blank">@qwguo88</a>) on <a href="https://codepen.io" rel="external nofollow noopener noreferrer" target="_blank">CodePen</a>.<br></iframe><h2 id="10、drop-shadow-投影"><a href="#10、drop-shadow-投影" class="headerlink" title="10、drop-shadow 投影"></a>10、drop-shadow 投影</h2><blockquote><p>设置图像或元素的投影效果，他和box-shadow效果一样</p></blockquote><p><strong>基本语法：</strong> <code>filter: drop-shadow()</code></p>]]></content>
      
      
      
        <tags>
            
            <tag> CSS3 </tag>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>codeText</title>
      <link href="/2020/02/23/codeText/"/>
      <url>/2020/02/23/codeText/</url>
      
        <content type="html"><![CDATA[<pre><code class="html">&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt;  &lt;meta charset=&quot;UTF-8&quot;&gt;  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;  &lt;title&gt;Document&lt;/title&gt;  &lt;style&gt;    b{      color:#c00;    }  &lt;/style&gt;  &lt;script&gt;    function(){      alert(123);    }  &lt;/script&gt;&lt;/head&gt;&lt;body&gt;  &lt;div id=&quot;abc&quot;&gt;&lt;/div&gt;  &lt;p class=&quot;abc&quot; id=&quot;p&quot; data-a=&quot;数据&quot;&gt;p标签&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><pre><code class="css">sub,sup {  font-size: 75%;  line-height: 0;  position: relative;  vertical-align: baseline;}sub {  bottom: -0.25em;}sup {  top: -0.5em;}</code></pre><pre><code class="less">  @media screen and (device-aspect-ratio: 1280/720) { … }  @media screen and (device-aspect-ratio: 2560/1440) { … }  html:lang(fr-be)  tr:nth-child(2n+1) /* represents every odd row of an HTML table */  img:nth-of-type(2n+1) { float: right; }  img:nth-of-type(2n) { float: left; }  body &gt; h2:not(:first-of-type):not(:last-of-type)  html|*:not(:link):not(:visited)  *|*:not(:hover)  p::first-line { text-transform: uppercase }  @namespace foo url(http://www.example.com);  foo|h1 { color: blue }  /* first rule */  span[hello=&quot;Ocean&quot;][goodbye=&quot;Land&quot;]  E[foo]{    padding:65px;  }</code></pre><pre><code class="scss">/* Some example SCSS */@import &quot;compass/css3&quot;;$variable: #333;$blue: #3bbfce;$margin: 16px;.content-navigation {  #nested {    background-color: black;  }  border-color: $blue;  color:    darken($blue, 9%);}.border {  padding: $margin / 2;  margin: $margin / 2;  border-color: $blue;}@mixin table-base {  th {    text-align: center;    font-weight: bold;  }  td, th {padding: 2px}}table.hl {  margin: 2em 0;  td.ln {    text-align: right;  }}li {  font: {    family: serif;    weight: bold;    size: 1.2em;  }}@mixin left($dist) {  float: left;  margin-left: $dist;}#data {  @include left(10px);  @include table-base;}.source {  @include flow-into(target);  border: 10px solid green;  margin: 20px;  width: 200px; }.new-container {  @include flow-from(target);  border: 10px solid red;  margin: 20px;  width: 200px; }body {  margin: 0;  padding: 3em 6em;  font-family: tahoma, arial, sans-serif;  color: #000;}@mixin yellow() {  background: yellow;}.big {  font-size: 14px;}.nested {  @include border-radius(3px);  @extend .big;  p {    background: whitesmoke;    a {      color: red;    }  }}#navigation a {  font-weight: bold;  text-decoration: none !important;}h1 {  font-size: 2.5em;}h2 {  font-size: 1.7em;}h1:before, h2:before {  content: &quot;::&quot;;}code {  font-family: courier, monospace;  font-size: 80%;  color: #418A8A;}</code></pre><pre><code class="vue">  &lt;template&gt;    &lt;div&gt;    &lt;/div&gt;  &lt;/template&gt;  &lt;script&gt;    export default {    }  &lt;/script&gt;  &lt;style lang=&quot;scss&quot; scoped&gt;    b{      color:#c00;      a{        color:#0c0      }    }  &lt;/style&gt;</code></pre><pre><code class="xml">&lt;html style=&quot;color: green&quot;&gt;  &lt;!-- this is a comment --&gt;  &lt;head&gt;    &lt;title&gt;HTML Example&lt;/title&gt;  &lt;/head&gt;  &lt;body&gt;    The indentation tries to be &lt;em&gt;somewhat &amp;quot;do what    I mean&amp;quot;&lt;/em&gt;... but might not match your style.  &lt;/body&gt;&lt;/html&gt;</code></pre><pre><code class="javascript">  setTimeout(()=&gt;{    console.log(123)  });  function(){    alert(123);  }    var abc;</code></pre><pre><code class="js">  setTimeout(()=&gt;{    console.log(123)  });  function(){    alert(123);  }    var abc;</code></pre><pre><code class="vue">&lt;template&gt;  &lt;div class=&quot;sass&quot;&gt;Im am a {{mustache-like}} template&lt;/div&gt;&lt;/template&gt;&lt;script lang=&quot;coffee&quot;&gt;  module.exports =    props: [&#39;one&#39;, &#39;two&#39;, &#39;three&#39;]&lt;/script&gt;&lt;style lang=&quot;sass&quot;&gt;.sass  font-size: 18px&lt;/style&gt;</code></pre><pre><code class="php">&lt;?php$a = array(&#39;a&#39; =&gt; 1, &#39;b&#39; =&gt; 2, 3 =&gt; &#39;c&#39;);echo &quot;$a[a] ${a[3] /* } comment */} {$a[b]} \$a[a]&quot;;function hello($who) {    return &quot;Hello $who!&quot;;}?&gt;</code></pre><pre><code class="json">a:{  a: 10,  b: 30}</code></pre><pre><code class="TypeScript">class Site {   name():void {      console.log(&quot;Runoob&quot;)   }}var obj = new Site();obj.name();</code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>css3中用来设置元素的过度效果属性：transition</title>
      <link href="/2019/12/21/CSS3/transition/"/>
      <url>/2019/12/21/CSS3/transition/</url>
      
        <content type="html"><![CDATA[<h1 id="transition过度属性"><a href="#transition过度属性" class="headerlink" title="transition过度属性"></a>transition过度属性</h1><blockquote><p><code>transition</code>：用于设置DOM元素在不同状态之间切换的时候应用不同的过度效果，以前如果要想实现一个非生硬的状态切换需要写很多的js来实现，现在使用<code>transition</code>变可以轻松的实现。</p></blockquote><h3 id="1、transition-property："><a href="#1、transition-property：" class="headerlink" title="1、transition-property："></a>1、transition-property：</h3><blockquote><p><code>property</code>：表示属性的意思，这里用来设置元素要过度的css属性名。</p></blockquote><p><strong>基本语法：</strong><br><code>transition: none | all | property;</code></p><ul><li><code>none</code>：表示没有任何过度效果。</li><li><code>all</code>：初始值，表示所有的能过度属性都有过度效果。</li><li><code>property</code>：指定一个或多个属性名称执行过度效果，多个css属性名之间用逗号分隔开。<a id="more"></a></li></ul><p><strong>例如：</strong></p><pre><code class="css">    transition-property: width;    transition-property: window, height, background-color, opacity;    transition-property: all;</code></pre><p><strong>兼容性：</strong></p><p><img src="/2019/12/21/CSS3/transition/transition-property-caniuse.png" alt="image"></p><p><a href="https://caniuse.com/#search=transition-property" rel="external nofollow noopener noreferrer" target="_blank">查看兼容性详情</a></p><p>查看案例<a href="https://codepen.io/qwguo88/pen/YzzBPYM" rel="external nofollow noopener noreferrer" target="_blank">Demo</a></p><p>能够支持过度的css属性<a href="http://leaverou.github.io/animatable/" rel="external nofollow noopener noreferrer" target="_blank">查看1</a>，<a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/CSS_animated_properties" rel="external nofollow noopener noreferrer" target="_blank">查看2</a></p><h3 id="2、transition-duration"><a href="#2、transition-duration" class="headerlink" title="2、transition-duration"></a>2、transition-duration</h3><blockquote><p><code>transition-duration</code>：表示过渡动画在多长时间内执行完毕。值以秒（s）或毫秒（ms）为单位不接受负值。可以指定多个值，每个值之间用逗号分开并且分别应用到 <code>transition-property</code> 指定的对应属性上。</p></blockquote><p><strong>基本语法：</strong><br><code>transition-duration: time;</code></p><ul><li><code>time</code>：指定动画执行时长。</li></ul><p><strong>例如：</strong></p><pre><code class="css">    transition-duration: 10s;    transition-duration: .5s, 10ms, .9ms, 0.5s, 10.05s; //如果是小数点左边只有一个0的话，前边的 0可以省略。</code></pre><p><strong>兼容性：</strong></p><p><img src="/2019/12/21/CSS3/transition/transition-duration-caniuse.png" alt="image"></p><p><a href="https://caniuse.com/#search=transition-duration" rel="external nofollow noopener noreferrer" target="_blank">查看兼容性详情</a></p><p>查看案例<a href="https://codepen.io/qwguo88/pen/LYYazMY" rel="external nofollow noopener noreferrer" target="_blank">Demo</a></p><h3 id="3、transition-timing-function"><a href="#3、transition-timing-function" class="headerlink" title="3、transition-timing-function"></a>3、transition-timing-function</h3><blockquote><p><code>transition-timing-function</code>：指定一个函数，定义属性值怎么变化。缓动函数 Timing functions 定义属性如何计算。多数 timing functions 由四点定义一个 bezier 曲线。也可以从 Easing Functions Cheat Sheet 选择缓动效果。</p></blockquote><p><strong>基本语法：</strong><br><code>transition-timing-function: ease | ease-in | ease-out | ease-in-out | linear | cubic-bezier(&lt;number&gt;, &lt;number&gt;, &lt;number&gt;, &lt;number&gt;) | step-start | set-end | steps(&lt;integer&gt;[, &lt;step-position&gt;]?) | inherit</code></p><ul><li><code>ease</code>：慢速开始，然后变快，然后慢速结束的过渡效果（cubic-bezier(0.25,0.1,0.25,1)）。</li><li><code>ease-in</code>：慢速开始的过渡效果（等于 cubic-bezier(0.42,0,1,1)）。</li><li><code>ease-out</code>：慢速结束的过渡效果（等于 cubic-bezier(0,0,0.58,1)）。</li><li><code>ease-in-out</code>：慢速开始和结束的过渡效果（等于 cubic-bezier(0.42,0,0.58,1)）。</li><li><code>linear</code>：以相同速度开始至结束的过渡效果（等于 cubic-bezier(0,0,1,1)）。</li><li><code>steps(4, end)</code>：四次运动到结束执行过度效果。</li><li><code>cubic-bezier(x1, y1, x2, y2)</code>：以贝塞尔函数算法执行过度效果。生成贝塞尔曲线网站：<a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/Tools/Cubic_Bezier_Generator" rel="external nofollow noopener noreferrer" target="_blank">website1</a>、<a href="https://cubic-bezier.com/" rel="external nofollow noopener noreferrer" target="_blank">website2</a>、<a href="https://easings.net/" rel="external nofollow noopener noreferrer" target="_blank">website</a></li></ul><p><img src="/2019/12/21/CSS3/transition/transition-timing-function-caniuse.png" alt="image"></p><p><a href="https://caniuse.com/#search=transition-timing-function" rel="external nofollow noopener noreferrer" target="_blank">查看兼容性详情</a></p><p>查看案例<a href="https://codepen.io/qwguo88/pen/zYYXypo" rel="external nofollow noopener noreferrer" target="_blank">Demo</a></p><h3 id="4、transition-delay"><a href="#4、transition-delay" class="headerlink" title="4、transition-delay"></a>4、transition-delay</h3><blockquote><p><code>transition-delay</code>：延迟指定时间后执行过度效果。值以秒（s）或毫秒（ms）为单位。取值为正时会延迟一段时间来响应过渡效果；取值为负时会导致过渡立即开始。可以指定多个延迟时间，每个延迟用逗号分开，分别作用于你所指定的相符合的css属性<code>transition-property</code>;</p></blockquote><p><strong>基本语法：</strong><br><code>transition: time | inherit | initial | unset</code></p><ul><li><code>time</code>：指定的时间，格式：10s | 10ms | 0.5s  (.5s) | -10ms | -5s (-.5s)</li><li><code>inherit</code>：</li></ul><p><img src="/2019/12/21/CSS3/transition/transition-delay-caniuse.png" alt="image"></p><p><a href="https://caniuse.com/#search=transition-delay" rel="external nofollow noopener noreferrer" target="_blank">查看兼容性详情</a></p><p>查看案例<a href="https://codepen.io/qwguo88/pen/qBBGOBG" rel="external nofollow noopener noreferrer" target="_blank">Demo</a></p><h3 id="5、transition"><a href="#5、transition" class="headerlink" title="5、transition"></a>5、transition</h3><blockquote><p><code>transition</code>：它是<code>transition-property</code>、<code>transition-duration</code>、<code>transition-timin-function</code>、<code>transition-delay</code> 的缩写形式，能够更方面的设置过渡效果，一般在开发中使用这种方式写过渡效果。</p></blockquote><p><strong>基本语法：</strong><br><code>transition: property duration timing-function delay | none</code></p><ul><li><code>none</code>：没有过渡效果。</li></ul><p><strong>基本写法：</strong></p><pre><code class="css">    /* 两个值，属性名，过渡持续时间 */    transition: margin-right 4s;    /* 三个值，属性名，过渡持续时间，延迟开始过渡时间 */    transition: margin-right 4s 1s;    /* 三个值，属性名，过渡持续时间，过渡动画效果 */    transition: margin-right 4s ease-in-out;    /* 四个值，属性名，过渡持续时间，过渡动画效果，延迟开始过渡时间 */    transition: margin-right 4s ease-in-out 1s;    /* 可以同时写多个过渡属性，每个过渡之间用逗号分开 */    transition: margin-right 4s, color 1s;    /* 也可以使用all表示全部属性 */    transition: all 0.5s ease-out;    /* 其他 */    transition: inherit;    transition: initial;    transition: unset;</code></pre><p><img src="/2019/12/21/CSS3/transition/transition-caniuse.png" alt="image"></p><p><a href="https://caniuse.com/#search=transition" rel="external nofollow noopener noreferrer" target="_blank">查看兼容性详情</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> CSS3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在css3中有两个控制js事件行为的属性</title>
      <link href="/2019/12/17/CSS3/cssEvents/"/>
      <url>/2019/12/17/CSS3/cssEvents/</url>
      
        <content type="html"><![CDATA[<h1 id="pointer-events"><a href="#pointer-events" class="headerlink" title="pointer-events"></a>pointer-events</h1><blockquote><p>属性指定在什么情况下某个特定的图形元素可以成为鼠标事件的 <code>target</code>，这个属性主要应用在<code>SVG</code>元素上，这篇文章主要介绍的是应用在HTML的DOM元素上</p></blockquote><p><strong>语法：</strong><br><code>pointer-events: auto | none | inherit | initial | unset;</code><br><a id="more"></a></p><ul><li><code>auto</code>：自动表示使用DOM的默认行为。</li><li><code>none</code>：表示该元素不执行任何的js事件，包括其后代元素。但是，当其后代元素的此属性指定其他值时，鼠标事件可以指向后代元素，在这种情况下，鼠标事件将在捕获或冒泡阶段触发父元素的事件侦听器。</li><li><code>inherit</code>：表示继承父级的<code>pointer-events</code>的值。</li><li><code>initial</code>：初始化，和<code>auto</code>效果一样，表示执行元素的默认行为。</li><li><code>unset</code>：未定义，继承父级行为。</li></ul><p><strong>兼容性：</strong><br><img src="/2019/12/17/CSS3/cssEvents/pointer-events-caniuse.png" alt="image"><br><a href="https://caniuse.com/#search=pointer-events" rel="external nofollow noopener noreferrer" target="_blank">查看兼容性详情</a></p><p>查看案例 <a href="https://codepen.io/qwguo88/pen/MWWZWBj" rel="external nofollow noopener noreferrer" target="_blank">Demo</a></p><iframe height="500" style="width: 100%;" scrolling="no" title="pointer-events" src="https://codepen.io/qwguo88/embed/MWWZWBj?height=300&theme-id=30742&default-tab=result" frameborder="no" allowtransparency="true" allowfullscreen="true"><br>  See the Pen <a href="https://codepen.io/qwguo88/pen/MWWZWBj" rel="external nofollow noopener noreferrer" target="_blank">pointer-events</a> by qwguo<br>  (<a href="https://codepen.io/qwguo88" rel="external nofollow noopener noreferrer" target="_blank">@qwguo88</a>) on <a href="https://codepen.io" rel="external nofollow noopener noreferrer" target="_blank">CodePen</a>.<br></iframe><h1 id="touch-action"><a href="#touch-action" class="headerlink" title="touch-action"></a>touch-action</h1><blockquote><p>touch-action是控制手势事件过滤的CSS属性，为开发人员提供了一种声明性机制，以有选择地禁用触摸滚动（在一个或两个轴上）或双击缩放，用于设置触摸屏用户如何操纵元素的区域</p></blockquote><p><strong>语法：</strong><br><code>touch-action: auto | none | [ [ pan-x | pan-left | pan-right ] || [ pan-y | pan-up | pan-down ] || pinch-zoom ] | manipulation;</code></p><ul><li><code>auto</code>：初始化值，表示根据浏览器决定当用户触控事件发生时执行默认行为。</li><li><code>none</code>：禁用touch事件，表示把元素上的触屏事件行为禁用，当用户在元素上触发触控行为时不进行任何操作。</li><li><code>pan-x</code>：表示只开启x轴的滑动行为，也就是左右滑动。</li><li><code>pan-left</code>：表示只开启元素向左滑动。</li></ul><p><strong>兼容性：</strong><br><img src="/2019/12/17/CSS3/cssEvents/touch-action-caniuse.png" alt="image"><br><a href="https://caniuse.com/#search=touch-action" rel="external nofollow noopener noreferrer" target="_blank">查看兼容性详情</a></p><p>查看案例 <a href="https://codepen.io/qwguo88/pen/YzzdyMd" rel="external nofollow noopener noreferrer" target="_blank">Demo</a></p><iframe height="500" style="width: 100%;" scrolling="no" title="touch-action" src="https://codepen.io/qwguo88/embed/YzzdyMd?height=300&theme-id=30742&default-tab=result" frameborder="no" allowtransparency="true" allowfullscreen="true"><br>  See the Pen <a href="https://codepen.io/qwguo88/pen/YzzdyMd" rel="external nofollow noopener noreferrer" target="_blank">touch-action</a> by qwguo<br>  (<a href="https://codepen.io/qwguo88" rel="external nofollow noopener noreferrer" target="_blank">@qwguo88</a>) on <a href="https://codepen.io" rel="external nofollow noopener noreferrer" target="_blank">CodePen</a>.<br></iframe>]]></content>
      
      
      
        <tags>
            
            <tag> CSS3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>flex布局</title>
      <link href="/2019/12/16/CSS3/flex/"/>
      <url>/2019/12/16/CSS3/flex/</url>
      
        <content type="html"><![CDATA[<h1 id="Flex"><a href="#Flex" class="headerlink" title="Flex"></a>Flex</h1><blockquote><p> flex 是 Flexible Box 的缩写，意为”弹性布局”，用来为盒状模型提供最大的灵活性。我们可以把任何容器转换成(flex container)成为<strong>弹性容器</strong>，它的所有子元素就变为(flex item)称为<strong>弹性项目成员</strong></p></blockquote><p>我们可以通过给任意容器元素添加 <code>display: flex;</code> <em>块级弹性容器</em> 和 <code>display:inline-flex;</code><em>行内块级弹性容器</em>；</p><p><strong><em>注意，设为 Flex 布局以后，子元素的<code>float</code>、<code>clear</code>和<code>vertical-align</code>属性将失效。</em></strong></p><h3 id="弹性容器的属性："><a href="#弹性容器的属性：" class="headerlink" title="弹性容器的属性："></a>弹性容器的属性：</h3><h4 id="1、flex-direction"><a href="#1、flex-direction" class="headerlink" title="1、flex-direction"></a>1、flex-direction</h4><blockquote><p><code>flex-direction</code>：用于设置容器中的子项目排列方向，定义主轴的方向（正反方向）</p></blockquote><a id="more"></a><p><strong>语法：</strong><br><code>flex-direction: row | row-reverse | column | column-reverse;</code></p><ul><li><code>row</code>：默认值，容器的主轴被定义为与文本方向相同，主轴起点和主轴终点与内容方向相同。一般：主轴为水平方向，起点在左端。</li><li><code>row-reverse</code>：表现和row的方向相同，但是置换了主轴起点和主轴终点。一般：主轴为水平方向，起点改为在右端。</li><li><code>column</code>：主轴为垂直方向，起点从上端乡下开始排列。</li><li><code>column-reverse</code>：主轴和column一样垂直方向，起点改为相反方向，从下到上排列。</li></ul><p><strong>兼容性：</strong><br><img src="/2019/12/16/CSS3/flex/flex-direction-caniuse.png" alt="image"><br><a href="https://caniuse.com/#search=flex-direction" rel="external nofollow noopener noreferrer" target="_blank">查看兼容性详情</a></p><p>查看案例 <a href="https://codepen.io/qwguo88/pen/abbqyVY" rel="external nofollow noopener noreferrer" target="_blank">Demo</a></p><iframe height="500" style="width: 100%;" scrolling="no" title="flex-direction" src="https://codepen.io/qwguo88/embed/abbqyVY?height=300&theme-id=30742&default-tab=result" frameborder="no" allowtransparency="true" allowfullscreen="true"><br>  See the Pen <a href="https://codepen.io/qwguo88/pen/abbqyVY" rel="external nofollow noopener noreferrer" target="_blank">flex-direction</a> by qwguo<br>  (<a href="https://codepen.io/qwguo88" rel="external nofollow noopener noreferrer" target="_blank">@qwguo88</a>) on <a href="https://codepen.io" rel="external nofollow noopener noreferrer" target="_blank">CodePen</a>.<br></iframe><h4 id="2、flex-wrap"><a href="#2、flex-wrap" class="headerlink" title="2、flex-wrap"></a>2、flex-wrap</h4><blockquote><p><code>flex-wrap</code>：属性定义容器中的子项目如果在一条轴线上排不下时如何显示。默认情况下，项目都排在一条线（又称”轴线”）上。</p></blockquote><p><strong>语法：</strong><br><code>flex-wrap: nowrap | wrap | wrap-reverse</code></p><ul><li><code>nowrap</code>：默认值，不换行，容器中的子项目强制在一条轴上显示，容器内的子元素会溢出显示。</li><li><code>wrap</code>：强制换行，当子项目排列超出容器后会自动换到下一行（<em>默认</em>）或者下一列，取决于flex-direction的设置。</li><li><code>wrap-reverse</code>：和 wrap 的行为一样强制换行，但是排列会从下开始往上排列换行，或者从右开始向左排列换行。</li></ul><p><strong>兼容性：</strong><br><img src="/2019/12/16/CSS3/flex/flex-wrap-caniuse.png" alt="image"><br><a href="https://caniuse.com/#search=flex-wrap" rel="external nofollow noopener noreferrer" target="_blank">查看兼容性详情</a></p><p>查看案例 <a href="https://codepen.io/qwguo88/pen/dyydwLr" rel="external nofollow noopener noreferrer" target="_blank">Demo</a></p><iframe height="500" style="width: 100%;" scrolling="no" title="flex-wrap" src="https://codepen.io/qwguo88/embed/dyydwLr?height=300&theme-id=30742&default-tab=result" frameborder="no" allowtransparency="true" allowfullscreen="true"><br>  See the Pen <a href="https://codepen.io/qwguo88/pen/dyydwLr" rel="external nofollow noopener noreferrer" target="_blank">flex-wrap</a> by qwguo<br>  (<a href="https://codepen.io/qwguo88" rel="external nofollow noopener noreferrer" target="_blank">@qwguo88</a>) on <a href="https://codepen.io" rel="external nofollow noopener noreferrer" target="_blank">CodePen</a>.<br></iframe><h4 id="3、flex-flow"><a href="#3、flex-flow" class="headerlink" title="3、flex-flow"></a>3、flex-flow</h4><blockquote><p><code>flex-flow</code>：属性是<code>flex-direction</code> 和 <code>flow-wrap</code> 的简写形式，字面上理解就是flex容器中字项目的流向。</p></blockquote><p><strong>语法：</strong><br><code>flex-flow: &lt;&#39;flex-direction&#39;&gt; || &lt;&#39;flex-wrap&#39;&gt;;</code></p><p><strong>兼容性：</strong><br><img src="/2019/12/16/CSS3/flex/flex-flow-caniuse.png" alt="image"><br><a href="https://caniuse.com/#search=flex-flow" rel="external nofollow noopener noreferrer" target="_blank">查看兼容性详情</a></p><p>查看案例<a href="https://codepen.io/qwguo88/pen/KKKQYBN" rel="external nofollow noopener noreferrer" target="_blank">Demo</a></p><iframe height="500" style="width: 100%;" scrolling="no" title="flex-flow" src="https://codepen.io/qwguo88/embed/KKKQYBN?height=300&theme-id=30742&default-tab=result" frameborder="no" allowtransparency="true" allowfullscreen="true"><br>  See the Pen <a href="https://codepen.io/qwguo88/pen/KKKQYBN" rel="external nofollow noopener noreferrer" target="_blank">flex-flow</a> by qwguo<br>  (<a href="https://codepen.io/qwguo88" rel="external nofollow noopener noreferrer" target="_blank">@qwguo88</a>) on <a href="https://codepen.io" rel="external nofollow noopener noreferrer" target="_blank">CodePen</a>.<br></iframe><h4 id="4、justify-content"><a href="#4、justify-content" class="headerlink" title="4、justify-content"></a>4、justify-content</h4><blockquote><p><code>justify-content</code>：属性定义容器中的子项目在主轴线上的对齐方式</p></blockquote><p><strong>语法：</strong><br><code>justify-content: flex-start | flex-end | center | space-between | space-around | space-evenly;</code></p><ul><li><code>flex-start</code>：默认值、弹性容器的子项目将以行或列的起始位置对齐；</li><li><code>flex-end</code>：弹性容器的子项目将以行或列的结束位置对齐；</li><li><code>center</code>：弹性容器的子项目将居中对齐；</li><li><code>space-between</code>：弹性容器的子项目将平局分布对齐，每个子项之间间距相同，首尾子项将贴近容器边缘；</li><li><code>space-around</code>：弹性容器的子项目将平局分布对齐，首尾子项将不贴近容器边缘，每个子项的左右或上下边距相同；</li><li><code>space-evenly</code>：弹性容器的子项目将平局分布对齐，首尾子项将不贴近容器边缘，首尾子项贴近容器的间距和子项之间的间距相同；</li></ul><p><strong>兼容性：</strong><br><img src="/2019/12/16/CSS3/flex/justify-content-caniuse.png" alt="image"><br><a href="https://caniuse.com/#feat=mdn-css_properties_justify-content_flex_context" rel="external nofollow noopener noreferrer" target="_blank">查看兼容性详情</a></p><p>查看案例<a href="https://codepen.io/qwguo88/pen/LYYQoop" rel="external nofollow noopener noreferrer" target="_blank">Demo</a></p><iframe height="500" style="width: 100%;" scrolling="no" title="justify-content" src="https://codepen.io/qwguo88/embed/LYYQoop?height=300&theme-id=30742&default-tab=result" frameborder="no" allowtransparency="true" allowfullscreen="true"><br>  See the Pen <a href="https://codepen.io/qwguo88/pen/LYYQoop" rel="external nofollow noopener noreferrer" target="_blank">justify-content</a> by qwguo<br>  (<a href="https://codepen.io/qwguo88" rel="external nofollow noopener noreferrer" target="_blank">@qwguo88</a>) on <a href="https://codepen.io" rel="external nofollow noopener noreferrer" target="_blank">CodePen</a>.<br></iframe><h4 id="5、align-items"><a href="#5、align-items" class="headerlink" title="5、align-items"></a>5、align-items</h4><blockquote><p><code>align-items</code>：属性设置弹性容器中的子项目在侧轴（纵轴 | 副轴）方向上的对齐方式</p></blockquote><p><strong>语法：</strong><br><code>align-items: flex-start | flex-end | center | baseline | stretch;</code></p><ul><li><code>flex-start</code>：弹性容器的子项目以侧轴的起始位置对齐</li><li><code>flex-end</code>：弹性容器的子项目以侧轴的结束位置对齐</li><li><code>center</code>：弹性容器的子项目以侧轴的中点对齐</li><li><code>baseline</code>：弹性容器的子项目以项目的第一行文字的基线对齐</li><li><code>stretch</code>：默认值，弹性容器的子项目如果不设置高度或者高度是auto，那么子项目将占满整个容器的高度</li></ul><p><strong>兼容性：</strong><br><img src="/2019/12/16/CSS3/flex/flex-align-items-caniuse.png" alt="image"><br><a href="https://caniuse.com/#feat=mdn-css_properties_align-items_flex_context" rel="external nofollow noopener noreferrer" target="_blank">查看兼容性详情</a></p><p>查看案例<a href="https://codepen.io/qwguo88/pen/NWWMjPG" rel="external nofollow noopener noreferrer" target="_blank">Demo</a></p><iframe height="500" style="width: 100%;" scrolling="no" title="align-items" src="https://codepen.io/qwguo88/embed/NWWMjPG?height=300&theme-id=30742&default-tab=result" frameborder="no" allowtransparency="true" allowfullscreen="true"><br>  See the Pen <a href="https://codepen.io/qwguo88/pen/NWWMjPG" rel="external nofollow noopener noreferrer" target="_blank">align-items</a> by qwguo<br>  (<a href="https://codepen.io/qwguo88" rel="external nofollow noopener noreferrer" target="_blank">@qwguo88</a>) on <a href="https://codepen.io" rel="external nofollow noopener noreferrer" target="_blank">CodePen</a>.<br></iframe><h4 id="6、align-content"><a href="#6、align-content" class="headerlink" title="6、align-content"></a>6、align-content</h4><blockquote><p><code>align-content</code>：属性定义了弹性容器中多根轴线的对齐方式。如果项目只有一根轴线或（设置了flex-wrap-nowrap属性的弹性容器）将不起作用，也可以理解为子项目整体的对齐方式，会把子项目划分成一个组。</p></blockquote><p><strong>语法：</strong><br><code>align-content: flex-start | flex-end | center | space-between | space-around | stretch;</code></p><ul><li><code>flex-start</code>：弹性容器的子项目以主轴的起始位置对齐</li><li><code>flex-end</code>：弹性容器的子项目以主轴的结束位置对齐</li><li><code>center</code>：弹性容器的子项目以主轴的中点对齐</li><li><code>space-between</code>：弹性容器的子项目以容器的两端对齐</li><li><code>space-around</code>：弹性容器的子项目平均分配容器的空间子项目间上下（或左右）间距相同</li><li><code>stretch</code>：默认值，弹性容器的子项目如果不设置高度或者高度是auto，那么子项目将拉伸平均占满整个容器的高度活宽度</li></ul><p><strong>兼容性：</strong><br><img src="/2019/12/16/CSS3/flex/flex-align-content-caniuse.png" alt="image"><br><a href="https://caniuse.com/#feat=mdn-css_properties_align-content_flex_context" rel="external nofollow noopener noreferrer" target="_blank">查看兼容性详情</a></p><p>查看案例<a href="https://codepen.io/qwguo88/pen/ExxLoGv" rel="external nofollow noopener noreferrer" target="_blank">Demo</a></p><iframe height="500" style="width: 100%;" scrolling="no" title="align-centent" src="https://codepen.io/qwguo88/embed/ExxLoGv?height=300&theme-id=30742&default-tab=result" frameborder="no" allowtransparency="true" allowfullscreen="true"><br>  See the Pen <a href="https://codepen.io/qwguo88/pen/ExxLoGv" rel="external nofollow noopener noreferrer" target="_blank">align-centent</a> by qwguo<br>  (<a href="https://codepen.io/qwguo88" rel="external nofollow noopener noreferrer" target="_blank">@qwguo88</a>) on <a href="https://codepen.io" rel="external nofollow noopener noreferrer" target="_blank">CodePen</a>.<br></iframe><h3 id="弹性容器中的子项目的属性："><a href="#弹性容器中的子项目的属性：" class="headerlink" title="弹性容器中的子项目的属性："></a>弹性容器中的子项目的属性：</h3><h4 id="1、flex-grow"><a href="#1、flex-grow" class="headerlink" title="1、flex-grow"></a>1、flex-grow</h4><blockquote><p><code>flex-grow</code>：属性设置弹性容器的子项是否拉伸填充容器的剩余空间</p></blockquote><p><strong>语法：</strong><br><code>flex-grow: number | 0</code></p><ul><li><code>0</code>：初始化值，表示不进行拉伸处理。</li><li><code>number</code>：只能取正整数。当容器中的子项目填充不满容器的时候，每个子项目将按照自身设置的<code>flew-grow:number</code>值来放大填充满剩余的空间。<ul><li>假设容器的宽度为400px, 子项1的占用的基础空间(flex-basis)为50px，子项2占用的基础空间是70px，子项3占用基础空间是100px，剩余空间为 400-50-70-100 = 180px。 其中子项1的flex-grow: 0(未设置默认为0)， 子项2flex-grow: 2，子项3flex-grow: 1，剩余空间分成3份，子项2占2份(120px)，子项3占1份(60px)。所以 子项1真实的占用空间为: 50+0 = 50px， 子项2真实的占用空间为: 70+120 = 190px， 子项3真实的占用空间为: 100+60 = 160px。</li></ul></li></ul><p><strong>兼容性：</strong><br><img src="/2019/12/16/CSS3/flex/flex-grow-caniuse.png" alt="image"><br><a href="https://caniuse.com/#search=flex-grow" rel="external nofollow noopener noreferrer" target="_blank">查看兼容详情</a></p><p>查看案例<a href="https://codepen.io/qwguo88/pen/xxxjJZo" rel="external nofollow noopener noreferrer" target="_blank">Demo</a></p><iframe height="500" style="width: 100%;" scrolling="no" title="flex-grow" src="https://codepen.io/qwguo88/embed/xxxjJZo?height=300&theme-id=30742&default-tab=result" frameborder="no" allowtransparency="true" allowfullscreen="true"><br>  See the Pen <a href="https://codepen.io/qwguo88/pen/xxxjJZo" rel="external nofollow noopener noreferrer" target="_blank">flex-grow</a> by qwguo<br>  (<a href="https://codepen.io/qwguo88" rel="external nofollow noopener noreferrer" target="_blank">@qwguo88</a>) on <a href="https://codepen.io" rel="external nofollow noopener noreferrer" target="_blank">CodePen</a>.<br></iframe><h4 id="2、flex-shrink"><a href="#2、flex-shrink" class="headerlink" title="2、flex-shrink"></a>2、flex-shrink</h4><blockquote><p><code>flex-shrink</code>：属性设置弹性容器的子项目在所有子项宽度之和大于容器总宽度是是否收缩。</p></blockquote><p><strong>语法：</strong><br><code>flew-shrink: number | 1</code></p><ul><li><code>1</code>：初始化值，表示每个子项目都进行缩放。</li><li><code>number</code>： 取值==0==表示不进行缩放，取值其他正整数表示进行缩放。具体计算规则是：<br><code>`</code><br>  //html<pre><code>&lt;div class=&quot;box&quot;&gt;  &lt;div class=&quot;sub-1&quot;&gt;11111&lt;/div&gt;  &lt;div class=&quot;sub-2&quot;&gt;2&lt;/div&gt;  &lt;div class=&quot;sub-3&quot;&gt;3&lt;/div&gt;&lt;/div&gt;</code></pre>  //less<br>  .box{<pre><code>display: flex;width: 500px;height: 200px;.sub-1{  width: 100px;  flex-shrink: 1;}.sub-2{  width: 200px;  flex-shrink: 2;}.sub-3{  width: 300px;  flex-shrink: 3;}</code></pre>  }</li></ul><p><code>`</code></p><blockquote><p>先计算总权重TW = 100px <em> 1(flex-shrink) + 200px </em>2(flex-shrink) + 300px *3(flex-shrink) = 1400px 也就是每个div的宽度乘以flex-shrink系数的总和。</p></blockquote><blockquote><p>每个div收缩的空间为：div的宽度 - div的宽度 <em> flex-shrink系数/ 总权重TW </em> 需要收缩的总宽度（在我们的例子中是600px - 500px = 100px）</p></blockquote><p><strong>兼容性：</strong><br><img src="/2019/12/16/CSS3/flex/flex-shrink-caniuse.png" alt="image"><br><a href="https://caniuse.com/#search=flex-shrink" rel="external nofollow noopener noreferrer" target="_blank">查看兼容详情</a></p><p>查看案例<a href="https://codepen.io/qwguo88/pen/vYYrEmp" rel="external nofollow noopener noreferrer" target="_blank">Demo</a></p><iframe height="500" style="width: 100%;" scrolling="no" title="flex-shrink" src="https://codepen.io/qwguo88/embed/vYYrEmp?height=300&theme-id=30742&default-tab=result" frameborder="no" allowtransparency="true" allowfullscreen="true"><br>  See the Pen <a href="https://codepen.io/qwguo88/pen/vYYrEmp" rel="external nofollow noopener noreferrer" target="_blank">flex-shrink</a> by qwguo<br>  (<a href="https://codepen.io/qwguo88" rel="external nofollow noopener noreferrer" target="_blank">@qwguo88</a>) on <a href="https://codepen.io" rel="external nofollow noopener noreferrer" target="_blank">CodePen</a>.<br></iframe><h4 id="3、flex-basis"><a href="#3、flex-basis" class="headerlink" title="3、flex-basis"></a>3、flex-basis</h4><blockquote><p><code>flex-basis</code>：定义弹性容器的子项目在主轴方向上占容器的空间大小。<em>它要比<code>width</code>或者<code>height</code>权重高</em></p></blockquote><p><strong>语法：</strong><br><code>flex-basis: &lt;length&gt; | auto;</code></p><ul><li><code>length</code>：用于设置元素的宽度或者高度。</li><li><code>auto</code>：默认值，表示元素按照内容来分配宽度或高度。</li></ul><p><strong>兼容性：</strong><br><img src="/2019/12/16/CSS3/flex/flex-basis-caniuse.png" alt="image"><br><a href="https://caniuse.com/#search=flex-basis" rel="external nofollow noopener noreferrer" target="_blank">查看兼容详情</a></p><p>查看案例<a href="https://codepen.io/qwguo88/pen/NWWzemV" rel="external nofollow noopener noreferrer" target="_blank">Demo</a></p><iframe height="500" style="width: 100%;" scrolling="no" title="flex-basis" src="https://codepen.io/qwguo88/embed/NWWzemV?height=300&theme-id=30742&default-tab=result" frameborder="no" allowtransparency="true" allowfullscreen="true"><br>  See the Pen <a href="https://codepen.io/qwguo88/pen/NWWzemV" rel="external nofollow noopener noreferrer" target="_blank">flex-basis</a> by qwguo<br>  (<a href="https://codepen.io/qwguo88" rel="external nofollow noopener noreferrer" target="_blank">@qwguo88</a>) on <a href="https://codepen.io" rel="external nofollow noopener noreferrer" target="_blank">CodePen</a>.<br></iframe><h4 id="4、flex"><a href="#4、flex" class="headerlink" title="4、flex"></a>4、flex</h4><blockquote><p><code>flex</code>：属性规定了弹性元素如何伸长或缩短以适应flex容器中的可用空间，它是<code>flex-basis</code>、<code>flex-grow</code>、<code>flex-shrink</code>三个属性的简写形式。可以指定1个，2个或3个值</p></blockquote><p><strong>语法：</strong><br><code>flex: none | [ &lt;&#39;flex-grow&#39;&gt; &lt;&#39;flex-shrink&#39;&gt;? || &lt;&#39;flex-basis&#39;&gt; ];</code></p><ul><li><code>none</code>：元素会根据自身宽高来设置尺寸。它是完全非弹性的：既不会缩短，也不会伸长来适应 flex 容器。相当于将属性设置为<code>flex: 0 0 auto</code>。</li><li><strong>单值语法：</strong> 值必须为以下其中之一：<ul><li>一个无单位数(<number>): 它会被当作<flex-grow>的值。</flex-grow></number></li><li>一个有效的宽度(width)值: 它会被当作 <flex-basis>的值。</flex-basis></li><li>关键字none，auto或initial.</li></ul></li><li><strong>双值语法：</strong> 第一个值必须为一个无单位数，并且它会被当作 <flex-grow> 的值。第二个值必须为以下之一：<ul><li>一个无单位数：它会被当作 <flex-shrink> 的值。</flex-shrink></li><li>一个有效的宽度值: 它会被当作 <flex-basis> 的值。</flex-basis></li></ul></flex-grow></li><li><p><strong>三值语法：</strong></p><ul><li>第一个值必须为一个无单位数，并且它会被当作 <flex-grow> 的值。</flex-grow></li><li>第二个值必须为一个无单位数，并且它会被当作  <flex-shrink> 的值。</flex-shrink></li><li>第三个值必须为一个有效的宽度值， 并且它会被当作 <flex-basis> 的值。</flex-basis></li></ul></li><li><p><code>initial</code>：元素会根据自身宽高设置尺寸。它会缩短自身以适应 flex 容器，但不会伸长并吸收 flex 容器中的额外自由空间来适应 flex 容器 。相当于将属性设置为<code>flex: 0 1 auto</code>。</p></li><li><code>auto</code>：元素会根据自身的宽度与高度来确定尺寸，但是会伸长并吸收 flex 容器中额外的自由空间，也会缩短自身来适应 flex 容器。这相当于将属性设置为 <code>flex: 1 1 auto</code>.</li></ul><p><strong>兼容性：</strong><br><img src="/2019/12/16/CSS3/flex/flex-caniuse.png" alt="image"><br><a href="https://caniuse.com/#search=flex" rel="external nofollow noopener noreferrer" target="_blank">查看兼容详情</a></p><p>查看案例<a href="https://codepen.io/qwguo88/pen/JjjBpWO" rel="external nofollow noopener noreferrer" target="_blank">Demo</a></p><iframe height="500" style="width: 100%;" scrolling="no" title="flex" src="https://codepen.io/qwguo88/embed/JjjBpWO?height=300&theme-id=30742&default-tab=result" frameborder="no" allowtransparency="true" allowfullscreen="true"><br>  See the Pen <a href="https://codepen.io/qwguo88/pen/JjjBpWO" rel="external nofollow noopener noreferrer" target="_blank">flex</a> by qwguo<br>  (<a href="https://codepen.io/qwguo88" rel="external nofollow noopener noreferrer" target="_blank">@qwguo88</a>) on <a href="https://codepen.io" rel="external nofollow noopener noreferrer" target="_blank">CodePen</a>.<br></iframe><h4 id="5、order"><a href="#5、order" class="headerlink" title="5、order"></a>5、order</h4><blockquote><p><code>order</code>：属性定义弹性容器的子项目在显示中的排列顺序，数值越小越靠前，默认值为0。如果两个子项目的 <code>order</code> 值相同那么就按照他们的代码出现结构排序。</p></blockquote><p><strong>语法：</strong><br><code>order: integer;</code></p><ul><li><code>integer</code>：取整数，可以取负数、0、正数。</li></ul><p><strong>兼容性：</strong><br><img src="/2019/12/16/CSS3/flex/flex-order-caniuse.png" alt="image"><br><a href="https://caniuse.com/#feat=mdn-css_properties_order" rel="external nofollow noopener noreferrer" target="_blank">查看兼容详情</a></p><p>查看案例<a href="https://codepen.io/qwguo88/pen/rNNrbxb" rel="external nofollow noopener noreferrer" target="_blank">Demo</a></p><iframe height="500" style="width: 100%;" scrolling="no" title="order" src="https://codepen.io/qwguo88/embed/rNNrbxb?height=300&theme-id=30742&default-tab=result" frameborder="no" allowtransparency="true" allowfullscreen="true"><br>  See the Pen <a href="https://codepen.io/qwguo88/pen/rNNrbxb" rel="external nofollow noopener noreferrer" target="_blank">order</a> by qwguo<br>  (<a href="https://codepen.io/qwguo88" rel="external nofollow noopener noreferrer" target="_blank">@qwguo88</a>) on <a href="https://codepen.io" rel="external nofollow noopener noreferrer" target="_blank">CodePen</a>.<br></iframe><h4 id="6、align-self"><a href="#6、align-self" class="headerlink" title="6、align-self"></a>6、align-self</h4><blockquote><p><code>align-self</code>：属性可以对弹性容器中的单个子项目进行设置对齐方式，并且覆盖容器中设置的<code>align-items</code>值。</p></blockquote><p><strong>语法：</strong><br><code>align-self: auto | flex-start | flex-end | center | baseline | stretch | inherit</code></p><ul><li><code>auto</code>：按照父元素的 <code>align-items</code> 值对齐，如果该元素没有父元素的话，就设置为 stretch。</li><li><code>flex-start</code>：按照弹性容器的主轴的开始位置对齐。</li><li><code>flex-end</code>：按照弹性容器的主轴结束位置对齐。</li><li><code>center</code>：按照弹性容器的主轴中间对齐。</li><li><code>baseline</code>：按照弹性容器中项目的第一行文字的基线对齐。</li><li><code>stretch</code>：按照弹性容器的宽或者高进行拉伸。</li><li><code>inherit</code>：继承父容器的 <code>align-items</code>对齐方式。</li></ul><p><strong>兼容性：</strong><br><img src="/2019/12/16/CSS3/flex/flex-align-self-caniuse.png" alt="image"><br><a href="https://caniuse.com/#feat=mdn-css_properties_align-self_flex_context" rel="external nofollow noopener noreferrer" target="_blank">查看兼容详情</a></p><p>查看案例<a href="https://codepen.io/qwguo88/pen/GRRXxQg" rel="external nofollow noopener noreferrer" target="_blank">Demo</a></p><iframe height="500" style="width: 100%;" scrolling="no" title="align-self" src="https://codepen.io/qwguo88/embed/GRRXxQg?height=300&theme-id=30742&default-tab=result" frameborder="no" allowtransparency="true" allowfullscreen="true"><br>  See the Pen <a href="https://codepen.io/qwguo88/pen/GRRXxQg" rel="external nofollow noopener noreferrer" target="_blank">align-self</a> by qwguo<br>  (<a href="https://codepen.io/qwguo88" rel="external nofollow noopener noreferrer" target="_blank">@qwguo88</a>) on <a href="https://codepen.io" rel="external nofollow noopener noreferrer" target="_blank">CodePen</a>.<br></iframe>]]></content>
      
      
      
        <tags>
            
            <tag> CSS3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>columns多列属性</title>
      <link href="/2019/12/13/CSS3/columns/"/>
      <url>/2019/12/13/CSS3/columns/</url>
      
        <content type="html"><![CDATA[<h1 id="columns样式属性使用"><a href="#columns样式属性使用" class="headerlink" title="columns样式属性使用"></a>columns样式属性使用</h1><blockquote><p><code>columns</code>：用于设置元素的列宽和列数。它是<code>column-width</code>和<code>column-count</code>的简写属性。</p></blockquote><p><strong>语法：</strong><br> <code>columns: &lt;&#39;column-width&#39;&gt; || &lt;&#39;column-count&#39;&gt;;</code></p><ul><li><code>column-width1</code>：用来设置列宽，取值<code>auto</code>和<code>像素值</code>，实际宽度可能会更宽或更窄以适合可用空间。</li><li><code>column-count</code>：用来设置元素内容被划分成几列，取值<code>auto</code>和<code>正整数</code>。如果取值和列的宽度都非<code>auto</code> ，则它仅指示允许的最大列数。</li></ul><a id="more"></a><p><strong>兼容性：</strong></p><p><img src="/2019/12/13/CSS3/columns/columns-caniuse.png" alt="image"><br><a href="https://caniuse.com/#search=columns" rel="external nofollow noopener noreferrer" target="_blank">查看兼容性详情</a></p><iframe height="400" style="width: 100%;" scrolling="no" title="columns" src="https://codepen.io/qwguo88/embed/jOOagVB?height=400&theme-id=default&default-tab=result" frameborder="no" allowtransparency="true" allowfullscreen="true"><br>  See the Pen <a href="https://codepen.io/qwguo88/pen/jOOagVB" rel="external nofollow noopener noreferrer" target="_blank">columns</a> by qwguo<br>  (<a href="https://codepen.io/qwguo88" rel="external nofollow noopener noreferrer" target="_blank">@qwguo88</a>) on <a href="https://codepen.io" rel="external nofollow noopener noreferrer" target="_blank">CodePen</a>.<br></iframe><h3 id="column-width样式属性使用"><a href="#column-width样式属性使用" class="headerlink" title="column-width样式属性使用"></a>column-width样式属性使用</h3><blockquote><p><code>column-width</code>：用于单独设置元素的列宽。</p></blockquote><p><strong>语法：</strong><br><code>column-width: auto | length;</code></p><ul><li><code>auto</code>：默认值，由浏览器决定宽度。</li><li><code>length</code>：单位值，用来这只每一列的宽度，当设置了<code>column-count</code>的时候优先把内容划分指定列数，宽度将自适应。</li></ul><p><strong>兼容性：</strong></p><p><img src="/2019/12/13/CSS3/columns/column-width-caniuse.png" alt="image"><br><a href="https://caniuse.com/#search=column-width" rel="external nofollow noopener noreferrer" target="_blank">查看兼容性详情</a></p><p>查看案例 <a href="https://codepen.io/qwguo88/pen/poodMNw" rel="external nofollow noopener noreferrer" target="_blank">Demo</a></p><iframe height="500" style="width: 100%;" scrolling="no" title="column-width" src="https://codepen.io/qwguo88/embed/poodMNw?height=300&theme-id=30742&default-tab=result" frameborder="no" allowtransparency="true" allowfullscreen="true"><br>  See the Pen <a href="https://codepen.io/qwguo88/pen/poodMNw" rel="external nofollow noopener noreferrer" target="_blank">column-width</a> by qwguo<br>  (<a href="https://codepen.io/qwguo88" rel="external nofollow noopener noreferrer" target="_blank">@qwguo88</a>) on <a href="https://codepen.io" rel="external nofollow noopener noreferrer" target="_blank">CodePen</a>.<br></iframe><h3 id="column-count样式属性使用"><a href="#column-count样式属性使用" class="headerlink" title="column-count样式属性使用"></a>column-count样式属性使用</h3><blockquote><p><code>column-count</code>：用于单独设置元素的列数。</p></blockquote><p><strong>语法：</strong><br><code>column-count: auto | number;</code></p><ul><li><code>auto</code>：默认值，由其他属性决定列数，比如 <code>column-width</code>，当<code>column-width</code>设置后会根据元素的总宽度和<code>column-width</code>的值来自动划分列数。</li><li><code>number</code>：划分元素以多少列来显示内容。</li></ul><p><strong>兼容性：</strong></p><p><img src="/2019/12/13/CSS3/columns/column-count-caniuse.png" alt="image"><br><a href="https://caniuse.com/#search=column-width" rel="external nofollow noopener noreferrer" target="_blank">查看兼容性详情</a></p><p>查看案例 <a href="https://codepen.io/qwguo88/pen/poodMNw" rel="external nofollow noopener noreferrer" target="_blank">Demo</a></p><iframe height="500" style="width: 100%;" scrolling="no" title="column-width" src="https://codepen.io/qwguo88/embed/poodMNw?height=300&theme-id=30742&default-tab=result" frameborder="no" allowtransparency="true" allowfullscreen="true"><br>  See the Pen <a href="https://codepen.io/qwguo88/pen/poodMNw" rel="external nofollow noopener noreferrer" target="_blank">column-width</a> by qwguo<br>  (<a href="https://codepen.io/qwguo88" rel="external nofollow noopener noreferrer" target="_blank">@qwguo88</a>) on <a href="https://codepen.io" rel="external nofollow noopener noreferrer" target="_blank">CodePen</a>.<br></iframe><h2 id="column-gap样式属性使用"><a href="#column-gap样式属性使用" class="headerlink" title="column-gap样式属性使用"></a>column-gap样式属性使用</h2><blockquote><p><code>column-gap</code>：用于设置每一列之间的间隔</p></blockquote><p><strong>语法：</strong><br><code>column-gap: length | normal;</code></p><ul><li><code>length</code>：设置列间的间隔为指定的长度。</li><li><code>normal</code>：规定列间间隔为一个常规的间隔。W3C 建议的值是 1em。</li></ul><p><strong>兼容性：</strong><br><img src="/2019/12/13/CSS3/columns/column-gap-caniuse.png" alt="image"><br><a href="https://caniuse.com/#feat=mdn-css_properties_column-gap_multicol_context" rel="external nofollow noopener noreferrer" target="_blank">查看兼容性详情</a></p><p>查看案例 <a href="https://codepen.io/qwguo88/pen/wvvpNmp" rel="external nofollow noopener noreferrer" target="_blank">Demo</a></p><iframe height="500" style="width: 100%;" scrolling="no" title="column-gap" src="https://codepen.io/qwguo88/embed/wvvpNmp?height=300&theme-id=30742&default-tab=result" frameborder="no" allowtransparency="true" allowfullscreen="true"><br>  See the Pen <a href="https://codepen.io/qwguo88/pen/wvvpNmp" rel="external nofollow noopener noreferrer" target="_blank">column-gap</a> by qwguo<br>  (<a href="https://codepen.io/qwguo88" rel="external nofollow noopener noreferrer" target="_blank">@qwguo88</a>) on <a href="https://codepen.io" rel="external nofollow noopener noreferrer" target="_blank">CodePen</a>.<br></iframe><h2 id="column-span样式属性使用"><a href="#column-span样式属性使用" class="headerlink" title="column-span样式属性使用"></a>column-span样式属性使用</h2><blockquote><p><code>column-span</code>：用于设置元素中的子元素横向跨越的列数</p></blockquote><p><strong>语法：</strong><br><code>column-span: 1 | all;</code></p><ul><li><code>1</code>：设置元素横跨一列，默认值。</li><li><code>all</code>：设置元素横跨所有列，也就是单独占一行显示。</li></ul><p><strong>兼容性：</strong><br><img src="/2019/12/13/CSS3/columns/column-span-caniuse.png" alt="image"><br><a href="https://caniuse.com/#search=column-span" rel="external nofollow noopener noreferrer" target="_blank">查看兼容性详情</a></p><p>查看案例 <a href="https://codepen.io/qwguo88/pen/GRRQZQW" rel="external nofollow noopener noreferrer" target="_blank">Demo</a></p><iframe height="500" style="width: 100%;" scrolling="no" title="column-span" src="https://codepen.io/qwguo88/embed/GRRQZQW?height=300&theme-id=30742&default-tab=result" frameborder="no" allowtransparency="true" allowfullscreen="true"><br>  See the Pen <a href="https://codepen.io/qwguo88/pen/GRRQZQW" rel="external nofollow noopener noreferrer" target="_blank">column-span</a> by qwguo<br>  (<a href="https://codepen.io/qwguo88" rel="external nofollow noopener noreferrer" target="_blank">@qwguo88</a>) on <a href="https://codepen.io" rel="external nofollow noopener noreferrer" target="_blank">CodePen</a>.<br></iframe><h2 id="column-rule样式属性使用"><a href="#column-rule样式属性使用" class="headerlink" title="column-rule样式属性使用"></a>column-rule样式属性使用</h2><blockquote><p><code>column-rule</code>：字面意思是设置多列规则，它是一个简写属性，用于整体设置所有 <code>column-rule-*</code> 的规则属性，规定列之间的==宽度==、==样式==和==颜色==规则，此属性类似于设置边框。</p></blockquote><p><strong>语法：</strong><br><code>column-rule: width | style | color</code></p><ul><li><p><code>width</code>：规定列之间的宽度规则，非简写：<code>column-rule-width</code></p><ul><li>取值：<code>thin | medium | thick | length</code>;<ul><li><code>thin</code>：很细</li><li><code>medium</code>：中等</li><li><code>thick</code>：宽厚</li><li><code>length</code>：自定义单位值</li></ul></li></ul></li><li><p><code>style</code>：规定列之间的样式规则，非简写：<code>column-rule-style</code></p><ul><li>取值：<code>none | hidden | dotted | dashed | solid | double | groove | ridge | inset | outset</code>;<ul><li><code>none</code>：无规则</li><li><code>hidden</code>：隐藏</li><li><code>dotted</code>：点线效果</li><li><code>dashed</code>：虚线效果</li><li><code>solid</code>：实线效果</li><li><code>double</code>：双线效果</li><li><code>groove</code>：定义3D凹槽效果。该效果取决于宽度和颜色值。</li><li><code>ridge</code>：定义3D凸起效果。该效果取决于宽度和颜色值。</li><li><code>inset</code>：定义3D内显示效果。该效果取决于宽度和颜色值。</li><li><code>outset</code>：定义3D外显示效果。该效果取决于宽度和颜色值。</li></ul></li></ul></li><li><p><code>color</code>：规定列之间的颜色规则，非简写：<code>column-rule-color</code></p><ul><li>取值：<code>color</code> 颜色值;</li></ul></li></ul><p><strong>兼容性：</strong></p><p><img src="/2019/12/13/CSS3/columns/column-rule-caniuse.png" alt="image"><br><a href="https://caniuse.com/#search=column-rule" rel="external nofollow noopener noreferrer" target="_blank">查看兼容性详情</a></p><p>查看案例 <a href="https://codepen.io/qwguo88/pen/jOOZrwo" rel="external nofollow noopener noreferrer" target="_blank">Demo</a></p><iframe height="500" style="width: 100%;" scrolling="no" title="column-rule" src="https://codepen.io/qwguo88/embed/jOOZrwo?height=300&theme-id=30742&default-tab=result" frameborder="no" allowtransparency="true" allowfullscreen="true"><br>  See the Pen <a href="https://codepen.io/qwguo88/pen/jOOZrwo" rel="external nofollow noopener noreferrer" target="_blank">column-rule</a> by qwguo<br>  (<a href="https://codepen.io/qwguo88" rel="external nofollow noopener noreferrer" target="_blank">@qwguo88</a>) on <a href="https://codepen.io" rel="external nofollow noopener noreferrer" target="_blank">CodePen</a>.<br></iframe><h2 id="column-fill样式属性使用"><a href="#column-fill样式属性使用" class="headerlink" title="column-fill样式属性使用"></a>column-fill样式属性使用</h2><blockquote><p><code>column-fill</code>：规定如何填充列</p></blockquote><p><strong>语法：</strong><br><code>column-fill: balance | auto;</code></p><ul><li><code>balance</code>：对列进行协调。浏览器应对列长度的差异进行最小化处理。</li><li><code>auto</code>：按顺序对列进行填充，列长度会各有不同。</li></ul><p><strong>兼容性：</strong> 暂时无浏览器支持此属性，这里就不做讨论了。</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Grid网格布局</title>
      <link href="/2019/07/20/CSS3/grid/"/>
      <url>/2019/07/20/CSS3/grid/</url>
      
        <content type="html"><![CDATA[<blockquote><h3 id="css3中的grid布局学习"><a href="#css3中的grid布局学习" class="headerlink" title="css3中的grid布局学习"></a>css3中的grid布局学习</h3></blockquote><p>Grid是CSS3中网格布局系统，也是最强大的布局系统。它是一个二维系统，这意味着它可以处理列和行，不像flexbox主要是一维系统。 您可以使用网格布局，通过将CSS规则应用于父元素（成为网格容器）和该元素的子元素（它们成为网格项）。</p><a id="more"></a><blockquote><h3 id="应用在父元素和子元素的Grid规则"><a href="#应用在父元素和子元素的Grid规则" class="headerlink" title="应用在父元素和子元素的Grid规则"></a>应用在父元素和子元素的Grid规则</h3></blockquote><table><thead><tr><th>作用在grid容器上</th><th>作用在grid子项上</th></tr></thead><tbody><tr><td>display</td><td>grid-column-start</td></tr><tr><td><a href="#grid-template-rows-grid-template-columns">grid-template-rows</a></td><td>grid-column-end</td></tr><tr><td><a href="#grid-template-rows-grid-template-columns">grid-template-columns</a></td><td>grid-row-start</td></tr><tr><td><a href="#grid-template-areas">grid-template-areas</a></td><td>grid-row-end</td></tr><tr><td><a href="#grid-template">grid-template</a></td><td>grid-column</td></tr><tr><td>grid-column-gap</td><td>grid-row</td></tr><tr><td>grid-row-gap</td><td>grid-area</td></tr><tr><td>grid-gap</td><td>justify-self</td></tr><tr><td>justify-items</td><td>align-self</td></tr><tr><td>align-items</td><td>place-self</td></tr><tr><td>place-items</td><td></td></tr><tr><td>justify-content</td><td></td></tr><tr><td>align-content</td><td></td></tr><tr><td>place-content</td><td></td></tr><tr><td>grid-auto-columns</td><td></td></tr><tr><td>grid-auto-rows</td><td></td></tr><tr><td>grid-auto-flow</td><td></td></tr><tr><td>grid</td><td></td></tr></tbody></table><p>如果想让一个块级元素成为网格布局，那么给该元素添加<code>display:grid</code>；</p><p>如果要想让一个内联元素成为网格布局，那么给钙元素添加<code>display:inline-grid</code>。</p><blockquote><h4 id="把元素变成Grid元素"><a href="#把元素变成Grid元素" class="headerlink" title="把元素变成Grid元素"></a>把元素变成Grid元素</h4></blockquote><p>代码如下：</p><pre><code class="html">  &lt;style type=&quot;text/css&quot;&gt;    .grid-box{      display: grid;    }  &lt;/style&gt;  &lt;div class=&quot;grid-box&quot;&gt;&lt;/div&gt;</code></pre><p>上边的代码中，div.grid-box元素现在就是一个网格布局元素。</p><blockquote><h4 id="grid-template-rows-grid-template-columns"><a href="#grid-template-rows-grid-template-columns" class="headerlink" title="grid-template-rows, grid-template-columns"></a>grid-template-rows, grid-template-columns</h4></blockquote><!-- <iframe height="420" style="width: 100%;" scrolling="no" title="grid-template-rows" src="//codepen.io/qwguo88/embed/voOdMK/?height=420&theme-id=30742&default-tab=css,result" frameborder="no" allowtransparency="true" allowfullscreen="true">  See the Pen <a href='https://codepen.io/qwguo88/pen/voOdMK/'>grid-template-rows</a> by qwguo  (<a href='https://codepen.io/qwguo88'>@qwguo88</a>) on <a href='https://codepen.io'>CodePen</a>.</iframe> --><p>从上面可以看到，通过设置<code>grid-template-rows: 50px auto 1fr;</code>把Grid元素中的子元素划分成了三行，并且给每一行分别设置高度值。</p><p>具体语法是：<code>&lt;track-size&gt; ... | &lt;line-name&gt; &lt;track-size&gt; ...;</code>;</p><ol><li><code>track-size1</code>：划分子元素的尺寸。可以是长度值，百分比值，以及fr单位（网格剩余空间比例单位）。</li><li><code>[line-name]</code>：对划分网格分隔线进行命名，语法是使用[]包裹我们自定义的命名，可以是中文，如果是两个值情况下用空格分开。</li></ol><blockquote><h4 id="grid-template-areas"><a href="#grid-template-areas" class="headerlink" title="grid-template-areas"></a>grid-template-areas</h4></blockquote><p>通过字面理解area是区域的意思，这个属性的作用是给父元素（网格元素）划分区域。</p><!-- <iframe height="420" style="width: 100%;" scrolling="no" title="grid-template-areas" src="//codepen.io/qwguo88/embed/ZgBXoE/?height=420&theme-id=30742&default-tab=css,result" frameborder="no" allowtransparency="true" allowfullscreen="true">  See the Pen <a href='https://codepen.io/qwguo88/pen/ZgBXoE/'>grid-template-areas</a> by qwguo  (<a href='https://codepen.io/qwguo88'>@qwguo88</a>) on <a href='https://codepen.io'>CodePen</a>.</iframe> --><pre>网格元素{  grid-template-areas:    "<grid-area-name> | . | none | ..."    "...";}子元素{  grid-area: grid-area-name;}</grid-area-name></pre><ol><li><code>grid-area-name</code>：表示网格区域的名称，可以是中文，可以是英文</li><li><code>.</code>：表示空的单元格</li><li><code>none</code>： 表示没有定义网格区域</li></ol><p>我们给定了网格区域名称以后，可以通过给子元素（网格单元格）设置<code>grid-area:a</code>进行设置，属性名不用使用引号。</p><p><strong>注意：</strong>如果我们给网格区域命了名，但是没有给网格线命名，则会自动根据网格区域名称生成网格线名称，规则是区域名称后面加-start和-end。例如，某网格区域名称是<code>&#39;a&#39;</code>，则左侧column线名称就是<code>&#39;a-start&#39;</code>，左侧column线名称就是<code>&#39;a-end&#39;</code>。我们的网格区域一定要形成规整的矩形区域，什么L形，凹的或凸的形状都是不支持的，会认为是无效的属性值。</p><blockquote><h4 id="grid-template"><a href="#grid-template" class="headerlink" title="grid-template"></a>grid-template</h4></blockquote><p><code>grid-template</code>是<code>grid-template-row</code>、<code>grid-template-column</code>、<code>grid-template-area</code>的简写形式1</p>]]></content>
      
      
      
        <tags>
            
            <tag> CSS3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ScrollifyJs</title>
      <link href="/2019/02/14/ScrollifyJs/"/>
      <url>/2019/02/14/ScrollifyJs/</url>
      
        <content type="html"><![CDATA[<h2 id="jQuery-Scrollify"><a href="#jQuery-Scrollify" class="headerlink" title="jQuery Scrollify"></a>jQuery Scrollify</h2><p>是一个jQuery插件，他可以实现整屏滚动。</p><table><thead><tr><th>参数</th><th style="text-align:center">说明</th><th style="text-align:center">默认值</th></tr></thead><tbody><tr><td>host</td><td style="text-align:center">远程主机的地址</td><td style="text-align:center"></td></tr><tr><td>user</td><td style="text-align:center">使用者名称</td><td style="text-align:center"></td></tr><tr><td>root</td><td style="text-align:center">远程主机的根目录</td><td style="text-align:center"></td></tr><tr><td>port</td><td style="text-align:center">端口</td><td style="text-align:center">22</td></tr><tr><td>delete</td><td style="text-align:center">删除远程主机上的旧文件</td><td style="text-align:center">true</td></tr><tr><td>verbose</td><td style="text-align:center">显示调试信息</td><td style="text-align:center">true</td></tr><tr><td>ignore_errors</td><td style="text-align:center">忽略错误</td><td style="text-align:center">false</td></tr></tbody></table>]]></content>
      
      
      
        <tags>
            
            <tag> Javascript </tag>
            
            <tag> Jquery </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
